/* tslint:disable */
/* eslint-disable */
/**
 * Mario Kart Wii Players\' Page API
 * The brains of the Mario Kart Wii Players\' Page.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryEf7Enum } from './CategoryEf7Enum';
import {
    CategoryEf7EnumFromJSON,
    CategoryEf7EnumFromJSONTyped,
    CategoryEf7EnumToJSON,
} from './CategoryEf7Enum';

/**
 * 
 * @export
 * @interface Standard
 */
export interface Standard {
    /**
     * 
     * @type {number}
     * @memberof Standard
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof Standard
     */
    level: number;
    /**
     * 
     * @type {number}
     * @memberof Standard
     */
    track: number;
    /**
     * 
     * @type {CategoryEf7Enum}
     * @memberof Standard
     */
    category: CategoryEf7Enum;
    /**
     * Off for 3lap, on for flap.
     * @type {boolean}
     * @memberof Standard
     */
    isLap?: boolean;
    /**
     * The highest score which qualifies for this standard. Leave blank for a catch-all standard.
     * @type {number}
     * @memberof Standard
     */
    value?: number | null;
}



/**
 * Check if a given object implements the Standard interface.
 */
export function instanceOfStandard(value: object): value is Standard {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('level' in value) || value['level'] === undefined) return false;
    if (!('track' in value) || value['track'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    return true;
}

export function StandardFromJSON(json: any): Standard {
    return StandardFromJSONTyped(json, false);
}

export function StandardFromJSONTyped(json: any, ignoreDiscriminator: boolean): Standard {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'level': json['level'],
        'track': json['track'],
        'category': CategoryEf7EnumFromJSON(json['category']),
        'isLap': json['is_lap'] == null ? undefined : json['is_lap'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function StandardToJSON(value?: Omit<Standard, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'level': value['level'],
        'track': value['track'],
        'category': CategoryEf7EnumToJSON(value['category']),
        'is_lap': value['isLap'],
        'value': value['value'],
    };
}

