/* tslint:disable */
/* eslint-disable */
/**
 * Mario Kart Wii Players\' Page API
 * The brains of the Mario Kart Wii Players\' Page.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlayerBasic
 */
export interface PlayerBasic {
    /**
     * 
     * @type {number}
     * @memberof PlayerBasic
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof PlayerBasic
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof PlayerBasic
     */
    region?: number | null;
    /**
     * User account associated with this player profile.
     * @type {number}
     * @memberof PlayerBasic
     */
    user?: number | null;
    /**
     * Can be anything, but is meant to be the player's online pseudonym.
     * @type {string}
     * @memberof PlayerBasic
     */
    alias?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PlayerBasic
     */
    joinedDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PlayerBasic
     */
    lastActivity?: Date | null;
}

/**
 * Check if a given object implements the PlayerBasic interface.
 */
export function instanceOfPlayerBasic(value: object): value is PlayerBasic {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function PlayerBasicFromJSON(json: any): PlayerBasic {
    return PlayerBasicFromJSONTyped(json, false);
}

export function PlayerBasicFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerBasic {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'region': json['region'] == null ? undefined : json['region'],
        'user': json['user'] == null ? undefined : json['user'],
        'alias': json['alias'] == null ? undefined : json['alias'],
        'joinedDate': json['joined_date'] == null ? undefined : (new Date(json['joined_date'])),
        'lastActivity': json['last_activity'] == null ? undefined : (new Date(json['last_activity'])),
    };
}

export function PlayerBasicToJSON(value?: Omit<PlayerBasic, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'region': value['region'],
        'user': value['user'],
        'alias': value['alias'],
        'joined_date': value['joinedDate'] == null ? undefined : ((value['joinedDate'] as any).toISOString().substring(0,10)),
        'last_activity': value['lastActivity'] == null ? undefined : ((value['lastActivity'] as any).toISOString().substring(0,10)),
    };
}

