/* tslint:disable */
/* eslint-disable */
/**
 * Mario Kart Wii Players\' Page API
 * The brains of the Mario Kart Wii Players\' Page.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlayerBasic } from './PlayerBasic';
import {
    PlayerBasicFromJSON,
    PlayerBasicFromJSONTyped,
    PlayerBasicToJSON,
} from './PlayerBasic';
import type { PlayerAwardTypeEnum } from './PlayerAwardTypeEnum';
import {
    PlayerAwardTypeEnumFromJSON,
    PlayerAwardTypeEnumFromJSONTyped,
    PlayerAwardTypeEnumToJSON,
} from './PlayerAwardTypeEnum';

/**
 * 
 * @export
 * @interface PlayerAward
 */
export interface PlayerAward {
    /**
     * 
     * @type {number}
     * @memberof PlayerAward
     */
    readonly id: number;
    /**
     * 
     * @type {PlayerBasic}
     * @memberof PlayerAward
     */
    player: PlayerBasic;
    /**
     * 
     * @type {PlayerAwardTypeEnum}
     * @memberof PlayerAward
     */
    type?: PlayerAwardTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof PlayerAward
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof PlayerAward
     */
    description: string;
}



/**
 * Check if a given object implements the PlayerAward interface.
 */
export function instanceOfPlayerAward(value: object): value is PlayerAward {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('player' in value) || value['player'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function PlayerAwardFromJSON(json: any): PlayerAward {
    return PlayerAwardFromJSONTyped(json, false);
}

export function PlayerAwardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerAward {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'player': PlayerBasicFromJSON(json['player']),
        'type': json['type'] == null ? undefined : PlayerAwardTypeEnumFromJSON(json['type']),
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'description': json['description'],
    };
}

export function PlayerAwardToJSON(value?: Omit<PlayerAward, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'player': PlayerBasicToJSON(value['player']),
        'type': PlayerAwardTypeEnumToJSON(value['type']),
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'description': value['description'],
    };
}

