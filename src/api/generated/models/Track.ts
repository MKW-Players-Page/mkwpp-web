/* tslint:disable */
/* eslint-disable */
/**
 * Mario Kart Wii Players\' Page API
 * The brains of the Mario Kart Wii Players\' Page.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CategoryEnum } from "./CategoryEnum";
import {
  CategoryEnumFromJSON,
  CategoryEnumFromJSONTyped,
  CategoryEnumToJSON,
} from "./CategoryEnum";

/**
 *
 * @export
 * @interface Track
 */
export interface Track {
  /**
   *
   * @type {number}
   * @memberof Track
   */
  readonly id: number;
  /**
   *
   * @type {string}
   * @memberof Track
   */
  name: string;
  /**
   * E.g. LC for Luigi Circuit and rPB for GCN Peach Beach.
   * @type {string}
   * @memberof Track
   */
  abbr: string;
  /**
   *
   * @type {number}
   * @memberof Track
   */
  cup: number;
  /**
   *
   * @type {Array<CategoryEnum>}
   * @memberof Track
   */
  categories: Array<CategoryEnum>;
}

/**
 * Check if a given object implements the Track interface.
 */
export function instanceOfTrack(value: object): value is Track {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("abbr" in value) || value["abbr"] === undefined) return false;
  if (!("cup" in value) || value["cup"] === undefined) return false;
  if (!("categories" in value) || value["categories"] === undefined)
    return false;
  return true;
}

export function TrackFromJSON(json: any): Track {
  return TrackFromJSONTyped(json, false);
}

export function TrackFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Track {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    name: json["name"],
    abbr: json["abbr"],
    cup: json["cup"],
    categories: (json["categories"] as Array<any>).map(CategoryEnumFromJSON),
  };
}

export function TrackToJSON(value?: Omit<Track, "id"> | null): any {
  if (value == null) {
    return value;
  }
  return {
    name: value["name"],
    abbr: value["abbr"],
    cup: value["cup"],
    categories: (value["categories"] as Array<any>).map(CategoryEnumToJSON),
  };
}
